import com.github.spotbugs.SpotBugsTask

plugins {
    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)

    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"

    //springboot framework
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 12

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
        includes = ['nl.tudelft.cse.sem.*']
        excludes = []
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    //runtimeOnly 'com.h2database:h2'
    runtime group: 'com.h2database', name: 'h2', version: '1.4.200'
    //testCompile 'com.h2database:h2'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0'

    //implementation('org.postgresql:postgresql:42.2.8')
    //implementation('postgresql:postgresql:9.1-901-1.jdbc4')
//    compile 'org.postgresql:postgresql:9.4.1212'
    //compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
    // use 2.6.0 for Java 7 projects
    testImplementation 'org.assertj:assertj-core:3.6.2'
    implementation 'junit:junit:4.12'

}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.cse.sem.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

checkstyle {
    toolVersion "8.25"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

//pmd {
//    incrementalAnalysis = true
//}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

java {
    sourceCompatibility = JavaVersion.VERSION_12
    targetCompatibility = JavaVersion.VERSION_12
}
